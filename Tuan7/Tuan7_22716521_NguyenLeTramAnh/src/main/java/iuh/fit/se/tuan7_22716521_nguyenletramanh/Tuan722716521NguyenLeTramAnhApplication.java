package iuh.fit.se.tuan7_22716521_nguyenletramanh;

import iuh.fit.se.tuan7_22716521_nguyenletramanh.daos.EmployeeDAO;
import iuh.fit.se.tuan7_22716521_nguyenletramanh.entities.Employee;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import java.util.List;
import java.util.Scanner;

@SpringBootApplication
public class Tuan722716521NguyenLeTramAnhApplication {

    private EmployeeDAO employeeDAO;

    public static void main(String[] args) {
        SpringApplication.run(Tuan722716521NguyenLeTramAnhApplication.class, args);
    }

    @Bean
    CommandLineRunner runner(EmployeeDAO employeeDAO) {
        return args -> {
            Scanner scanner = new Scanner(System.in);
            int choice;

            do {
                System.out.println("\n===== MENU =====");
                System.out.println("1. Hi·ªÉn th·ªã t·∫•t c·∫£ nh√¢n vi√™n");
                System.out.println("2. Th√™m nh√¢n vi√™n m·ªõi");
                System.out.println("3. C·∫≠p nh·∫≠t nh√¢n vi√™n theo ID");
                System.out.println("4. X√≥a nh√¢n vi√™n theo ID");
                System.out.println("5. T√¨m nh√¢n vi√™n theo ID");
                System.out.println("0. Tho√°t");
                System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
                choice = scanner.nextInt();
                scanner.nextLine(); // clear buffer

                switch (choice) {
                    case 1 -> {
                        System.out.println("Danh s√°ch nh√¢n vi√™n:");
                        List<Employee> employees = employeeDAO.getAll();
                        employees.forEach(System.out::println);
                    }
                    case 2 -> {
                        System.out.print("Nh·∫≠p t√™n nh√¢n vi√™n: ");
                        String name = scanner.nextLine();
                        System.out.print("Nh·∫≠p vai tr√≤: ");
                        String role = scanner.nextLine();

                        Employee newEmp = new Employee(0, role, name);
                        employeeDAO.save(newEmp);
                        System.out.println("‚úÖ ƒê√£ th√™m nh√¢n vi√™n m·ªõi!");
                    }
                    case 3 -> {
                        System.out.print("Nh·∫≠p ID nh√¢n vi√™n c·∫ßn c·∫≠p nh·∫≠t: ");
                        int id = scanner.nextInt();
                        scanner.nextLine(); // clear buffer

                        Employee empToUpdate = employeeDAO.getById(id);
                        if (empToUpdate == null) {
                            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y nh√¢n vi√™n c√≥ ID = " + id);
                        } else {
                            System.out.println("üìù Nh√¢n vi√™n hi·ªán t·∫°i: " + empToUpdate);
                            System.out.print("Nh·∫≠p t√™n m·ªõi: ");
                            String newName = scanner.nextLine();
                            System.out.print("Nh·∫≠p vai tr√≤ m·ªõi: ");
                            String newRole = scanner.nextLine();

                            empToUpdate.setName(newName);
                            empToUpdate.setRole(newRole);
                            employeeDAO.update(empToUpdate);
                            System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t nh√¢n vi√™n!");
                        }
                    }
                    case 4 -> {
                        System.out.print("Nh·∫≠p ID nh√¢n vi√™n c·∫ßn x√≥a: ");
                        int id = scanner.nextInt();
                        scanner.nextLine(); // clear buffer

                        employeeDAO.deleteById(id);
                        System.out.println("‚úÖ ƒê√£ x√≥a nh√¢n vi√™n c√≥ ID = " + id);
                    }
                    case 5 -> {
                        System.out.print("Nh·∫≠p ID nh√¢n vi√™n c·∫ßn t√¨m: ");
                        int id = scanner.nextInt();
                        scanner.nextLine();

                        Employee found = employeeDAO.getById(id);
                        if (found != null) {
                            System.out.println("üîç T√¨m th·∫•y: " + found);
                        } else {
                            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y nh√¢n vi√™n c√≥ ID = " + id);
                        }
                    }
                    case 0 -> System.out.println("üëã Tho√°t ch∆∞∆°ng tr√¨nh.");
                    default -> System.out.println("‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
                }

            } while (choice != 0);
        };
    }


}
